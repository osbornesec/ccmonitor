name: TUI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: |
        uv pip install -e .[dev]
    
    - name: Run linting
      run: |
        uv run ruff check src/
        uv run mypy src/
    
    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Performance tests
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      run: |
        uv run pytest tests/tui/test_performance.py -v --tb=short
    
    - name: Cross-platform tests  
      run: |
        uv run pytest tests/tui/test_cross_platform.py -v --tb=short
    
    - name: Visual regression tests
      if: matrix.os == 'ubuntu-latest'
      run: |
        uv run pytest tests/tui/test_visual_regression.py -v --tb=short
    
    - name: Store test artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/
          tests/tui/snapshots/*.current.txt
        retention-days: 30

  coverage-check:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: |
        uv pip install -e .[dev]
    
    - name: Generate coverage report
      run: |
        uv run pytest tests/ --cov=src --cov-report=term --cov-fail-under=95
    
    - name: Coverage summary
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        uv run coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

  benchmark:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: |
        uv pip install -e .[dev]
    
    - name: Run performance benchmarks
      run: |
        uv run pytest tests/tui/test_performance.py::TestPerformanceBaseline::test_benchmark_widget_operations -v --tb=short
    
    - name: Performance summary
      run: |
        echo "## Performance Benchmarks" >> $GITHUB_STEP_SUMMARY
        echo "Performance tests completed successfully." >> $GITHUB_STEP_SUMMARY
        echo "All performance thresholds met:" >> $GITHUB_STEP_SUMMARY
        echo "- Startup time: < 500ms" >> $GITHUB_STEP_SUMMARY
        echo "- Memory usage: < 10MB" >> $GITHUB_STEP_SUMMARY
        echo "- Navigation response: < 50ms" >> $GITHUB_STEP_SUMMARY